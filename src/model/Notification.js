/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Board from './Board';
import Card from './Card';

/**
 * The Notification model module.
 * @module model/Notification
 * @version 0.0.1
 */
class Notification {
    /**
     * Constructs a new <code>Notification</code>.
     * @alias module:model/Notification
     */
    constructor() { 
        
        Notification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Notification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Notification} obj Optional instance to populate.
     * @return {module:model/Notification} The populated <code>Notification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Notification();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('unread')) {
                obj['unread'] = ApiClient.convertToType(data['unread'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('dateRead')) {
                obj['dateRead'] = ApiClient.convertToType(data['dateRead'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('card')) {
                obj['card'] = Card.constructFromObject(data['card']);
            }
            if (data.hasOwnProperty('board')) {
                obj['board'] = Board.constructFromObject(data['board']);
            }
            if (data.hasOwnProperty('idMemberCreator')) {
                obj['idMemberCreator'] = ApiClient.convertToType(data['idMemberCreator'], 'String');
            }
            if (data.hasOwnProperty('idAction')) {
                obj['idAction'] = ApiClient.convertToType(data['idAction'], 'String');
            }
            if (data.hasOwnProperty('reactions')) {
                obj['reactions'] = ApiClient.convertToType(data['reactions'], Array);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Notification.prototype['id'] = undefined;

/**
 * @member {Boolean} unread
 */
Notification.prototype['unread'] = undefined;

/**
 * @member {module:model/Notification.TypeEnum} type
 */
Notification.prototype['type'] = undefined;

/**
 * @member {String} date
 */
Notification.prototype['date'] = undefined;

/**
 * @member {String} dateRead
 */
Notification.prototype['dateRead'] = undefined;

/**
 * @member {String} data
 */
Notification.prototype['data'] = undefined;

/**
 * @member {module:model/Card} card
 */
Notification.prototype['card'] = undefined;

/**
 * @member {module:model/Board} board
 */
Notification.prototype['board'] = undefined;

/**
 * @member {String} idMemberCreator
 */
Notification.prototype['idMemberCreator'] = undefined;

/**
 * @member {String} idAction
 */
Notification.prototype['idAction'] = undefined;

/**
 * @member {Array} reactions
 */
Notification.prototype['reactions'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Notification['TypeEnum'] = {

    /**
     * value: "cardDueSoon"
     * @const
     */
    "cardDueSoon": "cardDueSoon"
};



export default Notification;

