/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardBadges from './CardBadges';
import CardCover from './CardCover';
import CardDescData from './CardDescData';
import Limits from './Limits';
import OneOfCheckliststring from './OneOfCheckliststring';
import OneOfLabelstring from './OneOfLabelstring';
import OneOfstring from './OneOfstring';

/**
 * The Card model module.
 * @module model/Card
 * @version 0.0.1
 */
class Card {
    /**
     * Constructs a new <code>Card</code>.
     * @alias module:model/Card
     */
    constructor() { 
        
        Card.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Card</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Card} obj Optional instance to populate.
     * @return {module:model/Card} The populated <code>Card</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Card();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('badges')) {
                obj['badges'] = CardBadges.constructFromObject(data['badges']);
            }
            if (data.hasOwnProperty('checkItemStates')) {
                obj['checkItemStates'] = ApiClient.convertToType(data['checkItemStates'], [OneOfstring]);
            }
            if (data.hasOwnProperty('closed')) {
                obj['closed'] = ApiClient.convertToType(data['closed'], 'Boolean');
            }
            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = ApiClient.convertToType(data['coordinates'], 'String');
            }
            if (data.hasOwnProperty('creationMethod')) {
                obj['creationMethod'] = ApiClient.convertToType(data['creationMethod'], 'String');
            }
            if (data.hasOwnProperty('dateLastActivity')) {
                obj['dateLastActivity'] = ApiClient.convertToType(data['dateLastActivity'], 'Date');
            }
            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('descData')) {
                obj['descData'] = CardDescData.constructFromObject(data['descData']);
            }
            if (data.hasOwnProperty('due')) {
                obj['due'] = ApiClient.convertToType(data['due'], 'Date');
            }
            if (data.hasOwnProperty('dueReminder')) {
                obj['dueReminder'] = ApiClient.convertToType(data['dueReminder'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('idBoard')) {
                obj['idBoard'] = ApiClient.convertToType(data['idBoard'], 'String');
            }
            if (data.hasOwnProperty('idChecklists')) {
                obj['idChecklists'] = ApiClient.convertToType(data['idChecklists'], [OneOfCheckliststring]);
            }
            if (data.hasOwnProperty('idLabels')) {
                obj['idLabels'] = ApiClient.convertToType(data['idLabels'], [OneOfLabelstring]);
            }
            if (data.hasOwnProperty('idList')) {
                obj['idList'] = ApiClient.convertToType(data['idList'], 'String');
            }
            if (data.hasOwnProperty('idMembers')) {
                obj['idMembers'] = ApiClient.convertToType(data['idMembers'], [OneOfstring]);
            }
            if (data.hasOwnProperty('idMembersVoted')) {
                obj['idMembersVoted'] = ApiClient.convertToType(data['idMembersVoted'], [OneOfstring]);
            }
            if (data.hasOwnProperty('idShort')) {
                obj['idShort'] = ApiClient.convertToType(data['idShort'], 'Number');
            }
            if (data.hasOwnProperty('idAttachmentCover')) {
                obj['idAttachmentCover'] = ApiClient.convertToType(data['idAttachmentCover'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], [OneOfstring]);
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = Limits.constructFromObject(data['limits']);
            }
            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
            if (data.hasOwnProperty('manualCoverAttachment')) {
                obj['manualCoverAttachment'] = ApiClient.convertToType(data['manualCoverAttachment'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pos')) {
                obj['pos'] = ApiClient.convertToType(data['pos'], 'Number');
            }
            if (data.hasOwnProperty('shortLink')) {
                obj['shortLink'] = ApiClient.convertToType(data['shortLink'], 'String');
            }
            if (data.hasOwnProperty('shortUrl')) {
                obj['shortUrl'] = ApiClient.convertToType(data['shortUrl'], 'String');
            }
            if (data.hasOwnProperty('subscribed')) {
                obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('cover')) {
                obj['cover'] = CardCover.constructFromObject(data['cover']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Card.prototype['id'] = undefined;

/**
 * @member {String} address
 */
Card.prototype['address'] = undefined;

/**
 * @member {module:model/CardBadges} badges
 */
Card.prototype['badges'] = undefined;

/**
 * @member {Array.<module:model/OneOfstring>} checkItemStates
 */
Card.prototype['checkItemStates'] = undefined;

/**
 * @member {Boolean} closed
 */
Card.prototype['closed'] = undefined;

/**
 * @member {String} coordinates
 */
Card.prototype['coordinates'] = undefined;

/**
 * @member {String} creationMethod
 */
Card.prototype['creationMethod'] = undefined;

/**
 * @member {Date} dateLastActivity
 */
Card.prototype['dateLastActivity'] = undefined;

/**
 * @member {String} desc
 */
Card.prototype['desc'] = undefined;

/**
 * @member {module:model/CardDescData} descData
 */
Card.prototype['descData'] = undefined;

/**
 * @member {Date} due
 */
Card.prototype['due'] = undefined;

/**
 * @member {String} dueReminder
 */
Card.prototype['dueReminder'] = undefined;

/**
 * @member {String} email
 */
Card.prototype['email'] = undefined;

/**
 * @member {String} idBoard
 */
Card.prototype['idBoard'] = undefined;

/**
 * @member {Array.<module:model/OneOfCheckliststring>} idChecklists
 */
Card.prototype['idChecklists'] = undefined;

/**
 * @member {Array.<module:model/OneOfLabelstring>} idLabels
 */
Card.prototype['idLabels'] = undefined;

/**
 * @member {String} idList
 */
Card.prototype['idList'] = undefined;

/**
 * @member {Array.<module:model/OneOfstring>} idMembers
 */
Card.prototype['idMembers'] = undefined;

/**
 * @member {Array.<module:model/OneOfstring>} idMembersVoted
 */
Card.prototype['idMembersVoted'] = undefined;

/**
 * @member {Number} idShort
 */
Card.prototype['idShort'] = undefined;

/**
 * @member {String} idAttachmentCover
 */
Card.prototype['idAttachmentCover'] = undefined;

/**
 * @member {Array.<module:model/OneOfstring>} labels
 */
Card.prototype['labels'] = undefined;

/**
 * @member {module:model/Limits} limits
 */
Card.prototype['limits'] = undefined;

/**
 * @member {String} locationName
 */
Card.prototype['locationName'] = undefined;

/**
 * @member {Boolean} manualCoverAttachment
 */
Card.prototype['manualCoverAttachment'] = undefined;

/**
 * @member {String} name
 */
Card.prototype['name'] = undefined;

/**
 * @member {Number} pos
 */
Card.prototype['pos'] = undefined;

/**
 * @member {String} shortLink
 */
Card.prototype['shortLink'] = undefined;

/**
 * @member {String} shortUrl
 */
Card.prototype['shortUrl'] = undefined;

/**
 * @member {Boolean} subscribed
 */
Card.prototype['subscribed'] = undefined;

/**
 * @member {String} url
 */
Card.prototype['url'] = undefined;

/**
 * @member {module:model/CardCover} cover
 */
Card.prototype['cover'] = undefined;






export default Card;

