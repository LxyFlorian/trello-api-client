/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PluginData model module.
 * @module model/PluginData
 * @version 0.0.1
 */
class PluginData {
    /**
     * Constructs a new <code>PluginData</code>.
     * @alias module:model/PluginData
     */
    constructor() { 
        
        PluginData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PluginData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PluginData} obj Optional instance to populate.
     * @return {module:model/PluginData} The populated <code>PluginData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PluginData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idPlugin')) {
                obj['idPlugin'] = ApiClient.convertToType(data['idPlugin'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('idModel')) {
                obj['idModel'] = ApiClient.convertToType(data['idModel'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
PluginData.prototype['id'] = undefined;

/**
 * @member {String} idPlugin
 */
PluginData.prototype['idPlugin'] = undefined;

/**
 * @member {module:model/PluginData.ScopeEnum} scope
 */
PluginData.prototype['scope'] = undefined;

/**
 * @member {String} idModel
 */
PluginData.prototype['idModel'] = undefined;

/**
 * @member {String} value
 */
PluginData.prototype['value'] = undefined;

/**
 * @member {module:model/PluginData.AccessEnum} access
 */
PluginData.prototype['access'] = undefined;





/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
PluginData['ScopeEnum'] = {

    /**
     * value: "member"
     * @const
     */
    "member": "member",

    /**
     * value: "board"
     * @const
     */
    "board": "board",

    /**
     * value: "organization"
     * @const
     */
    "organization": "organization",

    /**
     * value: "card"
     * @const
     */
    "card": "card"
};


/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
PluginData['AccessEnum'] = {

    /**
     * value: "private"
     * @const
     */
    "private": "private",

    /**
     * value: "shared"
     * @const
     */
    "shared": "shared"
};



export default PluginData;

