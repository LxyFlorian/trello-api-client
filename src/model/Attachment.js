/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Color from './Color';

/**
 * The Attachment model module.
 * @module model/Attachment
 * @version 0.0.1
 */
class Attachment {
    /**
     * Constructs a new <code>Attachment</code>.
     * @alias module:model/Attachment
     */
    constructor() { 
        
        Attachment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Attachment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attachment} obj Optional instance to populate.
     * @return {module:model/Attachment} The populated <code>Attachment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attachment();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('bytes')) {
                obj['bytes'] = ApiClient.convertToType(data['bytes'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('edgeColor')) {
                obj['edgeColor'] = Color.constructFromObject(data['edgeColor']);
            }
            if (data.hasOwnProperty('idMember')) {
                obj['idMember'] = ApiClient.convertToType(data['idMember'], 'String');
            }
            if (data.hasOwnProperty('isUpload')) {
                obj['isUpload'] = ApiClient.convertToType(data['isUpload'], 'Boolean');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('previews')) {
                obj['previews'] = ApiClient.convertToType(data['previews'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('pos')) {
                obj['pos'] = ApiClient.convertToType(data['pos'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Attachment.prototype['id'] = undefined;

/**
 * @member {String} bytes
 */
Attachment.prototype['bytes'] = undefined;

/**
 * @member {Date} date
 */
Attachment.prototype['date'] = undefined;

/**
 * @member {module:model/Color} edgeColor
 */
Attachment.prototype['edgeColor'] = undefined;

/**
 * @member {String} idMember
 */
Attachment.prototype['idMember'] = undefined;

/**
 * @member {Boolean} isUpload
 */
Attachment.prototype['isUpload'] = undefined;

/**
 * @member {String} mimeType
 */
Attachment.prototype['mimeType'] = undefined;

/**
 * @member {String} name
 */
Attachment.prototype['name'] = undefined;

/**
 * @member {Array.<String>} previews
 */
Attachment.prototype['previews'] = undefined;

/**
 * @member {String} url
 */
Attachment.prototype['url'] = undefined;

/**
 * @member {Number} pos
 */
Attachment.prototype['pos'] = undefined;






export default Attachment;

