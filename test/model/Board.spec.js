/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TrelloRestApi);
  }
}(this, function(expect, TrelloRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TrelloRestApi.Board();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Board', function() {
    it('should create an instance of Board', function() {
      // uncomment below and update the code to test Board
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be.a(TrelloRestApi.Board);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property desc (base name: "desc")', function() {
      // uncomment below and update the code to test the property desc
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property descData (base name: "descData")', function() {
      // uncomment below and update the code to test the property descData
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property closed (base name: "closed")', function() {
      // uncomment below and update the code to test the property closed
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property idMemberCreator (base name: "idMemberCreator")', function() {
      // uncomment below and update the code to test the property idMemberCreator
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property idOrganization (base name: "idOrganization")', function() {
      // uncomment below and update the code to test the property idOrganization
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property pinned (base name: "pinned")', function() {
      // uncomment below and update the code to test the property pinned
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property shortUrl (base name: "shortUrl")', function() {
      // uncomment below and update the code to test the property shortUrl
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property prefs (base name: "prefs")', function() {
      // uncomment below and update the code to test the property prefs
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property labelNames (base name: "labelNames")', function() {
      // uncomment below and update the code to test the property labelNames
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property limits (base name: "limits")', function() {
      // uncomment below and update the code to test the property limits
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property starred (base name: "starred")', function() {
      // uncomment below and update the code to test the property starred
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property memberships (base name: "memberships")', function() {
      // uncomment below and update the code to test the property memberships
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property shortLink (base name: "shortLink")', function() {
      // uncomment below and update the code to test the property shortLink
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property subscribed (base name: "subscribed")', function() {
      // uncomment below and update the code to test the property subscribed
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property powerUps (base name: "powerUps")', function() {
      // uncomment below and update the code to test the property powerUps
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property dateLastActivity (base name: "dateLastActivity")', function() {
      // uncomment below and update the code to test the property dateLastActivity
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property dateLastView (base name: "dateLastView")', function() {
      // uncomment below and update the code to test the property dateLastView
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property idTags (base name: "idTags")', function() {
      // uncomment below and update the code to test the property idTags
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property datePluginDisable (base name: "datePluginDisable")', function() {
      // uncomment below and update the code to test the property datePluginDisable
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property creationMethod (base name: "creationMethod")', function() {
      // uncomment below and update the code to test the property creationMethod
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property ixUpdate (base name: "ixUpdate")', function() {
      // uncomment below and update the code to test the property ixUpdate
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property templateGallery (base name: "templateGallery")', function() {
      // uncomment below and update the code to test the property templateGallery
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

    it('should have the property enterpriseOwned (base name: "enterpriseOwned")', function() {
      // uncomment below and update the code to test the property enterpriseOwned
      //var instane = new TrelloRestApi.Board();
      //expect(instance).to.be();
    });

  });

}));
