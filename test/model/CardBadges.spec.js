/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TrelloRestApi);
  }
}(this, function(expect, TrelloRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TrelloRestApi.CardBadges();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CardBadges', function() {
    it('should create an instance of CardBadges', function() {
      // uncomment below and update the code to test CardBadges
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be.a(TrelloRestApi.CardBadges);
    });

    it('should have the property attachmentsByType (base name: "attachmentsByType")', function() {
      // uncomment below and update the code to test the property attachmentsByType
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property votes (base name: "votes")', function() {
      // uncomment below and update the code to test the property votes
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property viewingMemberVoted (base name: "viewingMemberVoted")', function() {
      // uncomment below and update the code to test the property viewingMemberVoted
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property subscribed (base name: "subscribed")', function() {
      // uncomment below and update the code to test the property subscribed
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property fogbugz (base name: "fogbugz")', function() {
      // uncomment below and update the code to test the property fogbugz
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property checkItems (base name: "checkItems")', function() {
      // uncomment below and update the code to test the property checkItems
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property checkItemsChecked (base name: "checkItemsChecked")', function() {
      // uncomment below and update the code to test the property checkItemsChecked
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property due (base name: "due")', function() {
      // uncomment below and update the code to test the property due
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

    it('should have the property dueComplete (base name: "dueComplete")', function() {
      // uncomment below and update the code to test the property dueComplete
      //var instane = new TrelloRestApi.CardBadges();
      //expect(instance).to.be();
    });

  });

}));
