/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TrelloRestApi);
  }
}(this, function(expect, TrelloRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TrelloRestApi.Enterprise();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Enterprise', function() {
    it('should create an instance of Enterprise', function() {
      // uncomment below and update the code to test Enterprise
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be.a(TrelloRestApi.Enterprise);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property logoHash (base name: "logoHash")', function() {
      // uncomment below and update the code to test the property logoHash
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logoUrl")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property prefs (base name: "prefs")', function() {
      // uncomment below and update the code to test the property prefs
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property organizationPrefs (base name: "organizationPrefs")', function() {
      // uncomment below and update the code to test the property organizationPrefs
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property ssoActivationFailed (base name: "ssoActivationFailed")', function() {
      // uncomment below and update the code to test the property ssoActivationFailed
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property idAdmins (base name: "idAdmins")', function() {
      // uncomment below and update the code to test the property idAdmins
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property enterpriseDomains (base name: "enterpriseDomains")', function() {
      // uncomment below and update the code to test the property enterpriseDomains
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property isRealEnterprise (base name: "isRealEnterprise")', function() {
      // uncomment below and update the code to test the property isRealEnterprise
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property pluginWhitelistingEnabled (base name: "pluginWhitelistingEnabled")', function() {
      // uncomment below and update the code to test the property pluginWhitelistingEnabled
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property idOrganizations (base name: "idOrganizations")', function() {
      // uncomment below and update the code to test the property idOrganizations
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "products")', function() {
      // uncomment below and update the code to test the property products
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property licenses (base name: "licenses")', function() {
      // uncomment below and update the code to test the property licenses
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property domains (base name: "domains")', function() {
      // uncomment below and update the code to test the property domains
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property dateOrganizationPrefsLastUpdated (base name: "dateOrganizationPrefsLastUpdated")', function() {
      // uncomment below and update the code to test the property dateOrganizationPrefsLastUpdated
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

    it('should have the property idp (base name: "idp")', function() {
      // uncomment below and update the code to test the property idp
      //var instane = new TrelloRestApi.Enterprise();
      //expect(instance).to.be();
    });

  });

}));
