/**
 * Trello REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TrelloRestApi);
  }
}(this, function(expect, TrelloRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TrelloRestApi.Card();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Card', function() {
    it('should create an instance of Card', function() {
      // uncomment below and update the code to test Card
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be.a(TrelloRestApi.Card);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property badges (base name: "badges")', function() {
      // uncomment below and update the code to test the property badges
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property checkItemStates (base name: "checkItemStates")', function() {
      // uncomment below and update the code to test the property checkItemStates
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property closed (base name: "closed")', function() {
      // uncomment below and update the code to test the property closed
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property coordinates (base name: "coordinates")', function() {
      // uncomment below and update the code to test the property coordinates
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property creationMethod (base name: "creationMethod")', function() {
      // uncomment below and update the code to test the property creationMethod
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property dateLastActivity (base name: "dateLastActivity")', function() {
      // uncomment below and update the code to test the property dateLastActivity
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property desc (base name: "desc")', function() {
      // uncomment below and update the code to test the property desc
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property descData (base name: "descData")', function() {
      // uncomment below and update the code to test the property descData
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property due (base name: "due")', function() {
      // uncomment below and update the code to test the property due
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property dueReminder (base name: "dueReminder")', function() {
      // uncomment below and update the code to test the property dueReminder
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idBoard (base name: "idBoard")', function() {
      // uncomment below and update the code to test the property idBoard
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idChecklists (base name: "idChecklists")', function() {
      // uncomment below and update the code to test the property idChecklists
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idLabels (base name: "idLabels")', function() {
      // uncomment below and update the code to test the property idLabels
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idList (base name: "idList")', function() {
      // uncomment below and update the code to test the property idList
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idMembers (base name: "idMembers")', function() {
      // uncomment below and update the code to test the property idMembers
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idMembersVoted (base name: "idMembersVoted")', function() {
      // uncomment below and update the code to test the property idMembersVoted
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idShort (base name: "idShort")', function() {
      // uncomment below and update the code to test the property idShort
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property idAttachmentCover (base name: "idAttachmentCover")', function() {
      // uncomment below and update the code to test the property idAttachmentCover
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property limits (base name: "limits")', function() {
      // uncomment below and update the code to test the property limits
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property locationName (base name: "locationName")', function() {
      // uncomment below and update the code to test the property locationName
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property manualCoverAttachment (base name: "manualCoverAttachment")', function() {
      // uncomment below and update the code to test the property manualCoverAttachment
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property pos (base name: "pos")', function() {
      // uncomment below and update the code to test the property pos
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property shortLink (base name: "shortLink")', function() {
      // uncomment below and update the code to test the property shortLink
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property shortUrl (base name: "shortUrl")', function() {
      // uncomment below and update the code to test the property shortUrl
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property subscribed (base name: "subscribed")', function() {
      // uncomment below and update the code to test the property subscribed
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property cover (base name: "cover")', function() {
      // uncomment below and update the code to test the property cover
      //var instane = new TrelloRestApi.Card();
      //expect(instance).to.be();
    });

  });

}));
